{
  "address": "0x28a0A1C63E7E8F0DAe5ad633fe232c12b489d5f0",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IOpsProxyFactory",
          "name": "_opsProxyFactory",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "messages",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "opsProxyFactory",
      "outputs": [
        {
          "internalType": "contract IOpsProxyFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_message",
          "type": "string"
        }
      ],
      "name": "postMessage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_eoa",
          "type": "address"
        }
      ],
      "name": "viewMessage",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x2323aff61a3762b9723bf979ada6b8b0f6451f77c794edcf89cfc26194a23518",
  "receipt": {
    "to": null,
    "from": "0x4C0A3A5A04332c3a03a8fCa3D1f0AE34474b51B4",
    "contractAddress": "0x28a0A1C63E7E8F0DAe5ad633fe232c12b489d5f0",
    "transactionIndex": 4,
    "gasUsed": "603594",
    "logsBloom": "0x
    "blockHash": "0x1a8496aa798c81e1d5d41e657b2fb6ed8898f3f63df938879e195581d2178641",
    "transactionHash": "0x2323aff61a3762b9723bf979ada6b8b0f6451f77c794edcf89cfc26194a23518",
    "logs": [
      {
        "transactionIndex": 4,
        "blockNumber": 32844687,
        "transactionHash": "0x2323aff61a3762b9723bf979ada6b8b0f6451f77c794edcf89cfc26194a23518",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000004c0a3a5a04332c3a03a8fca3d1f0ae34474b51b4",
          "0x000000000000000000000000f903ba9e006193c1527bfbe65fe2123704ea3f99"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000033772c4f016000000000000000000000000000000000000000000000000000b59e93a1001df7b000000000000000000000000000000000000000000000bb3e8e7fc90de53d1830000000000000000000000000000000000000000000000000b56b1c74b11c97b000000000000000000000000000000000000000000000bb3e8eb3403a343e783",
        "logIndex": 8,
        "blockHash": "0x1a8496aa798c81e1d5d41e657b2fb6ed8898f3f63df938879e195581d2178641"
      }
    ],
    "blockNumber": 32844687,
    "cumulativeGasUsed": "1128159",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x44bde1bccdD06119262f1fE441FBe7341EaaC185"
  ],
  "numDeployments": 1,
  "solcInputHash": "ea5918e00ee4b3f19c8f331e7f7241f0",
  "metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IOpsProxyFactory\",\"name\":\"_opsProxyFactory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"messages\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"opsProxyFactory\",\"outputs\":[{\"internalType\":\"contract IOpsProxyFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_message\",\"type\":\"string\"}],\"name\":\"postMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_eoa\",\"type\":\"address\"}],\"name\":\"viewMessage\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AdvertisingBoard/AdvertisingBoard.sol\":\"AdvertisingBoard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AdvertisingBoard/AdvertisingBoard.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.0;\\n\\nimport {IOpsProxyFactory} from \\\"./IOpsProxyFactory.sol\\\";\\n\\ncontract AdvertisingBoard {\\n    IOpsProxyFactory public immutable opsProxyFactory;\\n    mapping(address => string) public messages;\\n\\n    constructor(IOpsProxyFactory _opsProxyFactory) {\\n        opsProxyFactory = _opsProxyFactory;\\n    }\\n\\n    function postMessage(string calldata _message) external {\\n        messages[msg.sender] = _message;\\n    }\\n\\n    function viewMessage(address _eoa) external view returns (string memory) {\\n        (address dedicatedMsgSender, ) = opsProxyFactory.getProxyOf(_eoa);\\n\\n        return messages[dedicatedMsgSender];\\n    }\\n}\\n\",\"keccak256\":\"0x19c897b20f4de7650886c8c04812912c200078571befc5f17a71785e92a325b3\",\"license\":\"UNLICENSED\"},\"contracts/AdvertisingBoard/IOpsProxyFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IOpsProxyFactory {\\n    /**\\n     * @notice Emitted when an OpsProxy is deployed.\\n     *\\n     * @param deployer Address which initiated the deployment\\n     * @param owner The address which the proxy is for.\\n     * @param proxy Address of deployed proxy.\\n     */\\n    event DeployProxy(\\n        address indexed deployer,\\n        address indexed owner,\\n        address indexed proxy\\n    );\\n\\n    /**\\n     * @notice Emitted when OpsProxy implementation to be deployed is changed.\\n     *\\n     * @param oldImplementation Previous OpsProxy implementation.\\n     * @param newImplementation Current OpsProxy implementation.\\n     */\\n    event SetImplementation(\\n        address indexed oldImplementation,\\n        address indexed newImplementation\\n    );\\n\\n    /**\\n     * @notice Emitted when OpsProxy implementation is added or removed from whitelist.\\n     *\\n     * @param implementation OpsProxy implementation.\\n     * @param whitelisted Added or removed from whitelist.\\n     */\\n    event UpdateWhitelistedImplementation(\\n        address indexed implementation,\\n        bool indexed whitelisted\\n    );\\n\\n    /**\\n     * @notice Deploys OpsProxy for the msg.sender.\\n     *\\n     * @return proxy Address of deployed proxy.\\n     */\\n    function deploy() external returns (address payable proxy);\\n\\n    /**\\n     * @notice Deploys OpsProxy for another address.\\n     *\\n     * @param owner Address to deploy the proxy for.\\n     *\\n     * @return proxy Address of deployed proxy.\\n     */\\n    function deployFor(address owner) external returns (address payable proxy);\\n\\n    /**\\n     * @notice Sets the OpsProxy implementation that will be deployed by OpsProxyFactory.\\n     *\\n     * @param newImplementation New implementation to be set.\\n     */\\n    function setImplementation(address newImplementation) external;\\n\\n    /**\\n     * @notice Add or remove OpsProxy implementation from the whitelist.\\n     *\\n     * @param implementation OpsProxy implementation.\\n     * @param whitelist Added or removed from whitelist.\\n     */\\n    function updateWhitelistedImplementations(\\n        address implementation,\\n        bool whitelist\\n    ) external;\\n\\n    /**\\n     * @notice Determines the OpsProxy address when it is not deployed.\\n     *\\n     * @param account Address to determine the proxy address for.\\n     */\\n    function determineProxyAddress(address account)\\n        external\\n        view\\n        returns (address);\\n\\n    /**\\n     * @return address Proxy address owned by account.\\n     * @return bool Whether if proxy is deployed\\n     */\\n    function getProxyOf(address account) external view returns (address, bool);\\n\\n    /**\\n     * @return address Owner of deployed proxy.\\n     */\\n    function ownerOf(address proxy) external view returns (address);\\n\\n    /**\\n     * @return bool Whether if implementation is whitelisted.\\n     */\\n    function whitelistedImplementations(address implementation)\\n        external\\n        view\\n        returns (bool);\\n}\\n\",\"keccak256\":\"0x1ef701b95aa770e65a9d058cf3613780fe34a5f54c3ecc7961347d5f25fdf483\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610b16380380610b16833981810160405281019061003291906100e1565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505061010e565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061009c82610071565b9050919050565b60006100ae82610091565b9050919050565b6100be816100a3565b81146100c957600080fd5b50565b6000815190506100db816100b5565b92915050565b6000602082840312156100f7576100f661006c565b5b6000610105848285016100cc565b91505092915050565b6080516109e6610130600039600081816101df015261020701526109e66000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80635fdd59f8146100515780636630f88f14610081578063ba1d0ff41461009d578063c424cb55146100bb575b600080fd5b61006b600480360381019061006691906103d8565b6100eb565b6040516100789190610495565b60405180910390f35b61009b6004803603810190610096919061051c565b61018b565b005b6100a56101dd565b6040516100b291906105c8565b60405180910390f35b6100d560048036038101906100d091906103d8565b610201565b6040516100e29190610495565b60405180910390f35b6000602052806000526040600020600091509050805461010a90610612565b80601f016020809104026020016040519081016040528092919081815260200182805461013690610612565b80156101835780601f1061015857610100808354040283529160200191610183565b820191906000526020600020905b81548152906001019060200180831161016657829003601f168201915b505050505081565b81816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002091826101d8929190610829565b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b606060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ded89a7c846040518263ffffffff1660e01b815260040161025e9190610908565b6040805180830381865afa15801561027a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029e9190610970565b5090506000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080546102ea90610612565b80601f016020809104026020016040519081016040528092919081815260200182805461031690610612565b80156103635780601f1061033857610100808354040283529160200191610363565b820191906000526020600020905b81548152906001019060200180831161034657829003601f168201915b5050505050915050919050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103a58261037a565b9050919050565b6103b58161039a565b81146103c057600080fd5b50565b6000813590506103d2816103ac565b92915050565b6000602082840312156103ee576103ed610370565b5b60006103fc848285016103c3565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561043f578082015181840152602081019050610424565b60008484015250505050565b6000601f19601f8301169050919050565b600061046782610405565b6104718185610410565b9350610481818560208601610421565b61048a8161044b565b840191505092915050565b600060208201905081810360008301526104af818461045c565b905092915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126104dc576104db6104b7565b5b8235905067ffffffffffffffff8111156104f9576104f86104bc565b5b602083019150836001820283011115610515576105146104c1565b5b9250929050565b6000806020838503121561053357610532610370565b5b600083013567ffffffffffffffff81111561055157610550610375565b5b61055d858286016104c6565b92509250509250929050565b6000819050919050565b600061058e6105896105848461037a565b610569565b61037a565b9050919050565b60006105a082610573565b9050919050565b60006105b282610595565b9050919050565b6105c2816105a7565b82525050565b60006020820190506105dd60008301846105b9565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061062a57607f821691505b60208210810361063d5761063c6105e3565b5b50919050565b600082905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026106df7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826106a2565b6106e986836106a2565b95508019841693508086168417925050509392505050565b6000819050919050565b600061072661072161071c84610701565b610569565b610701565b9050919050565b6000819050919050565b6107408361070b565b61075461074c8261072d565b8484546106af565b825550505050565b600090565b61076961075c565b610774818484610737565b505050565b5b818110156107985761078d600082610761565b60018101905061077a565b5050565b601f8211156107dd576107ae8161067d565b6107b784610692565b810160208510156107c6578190505b6107da6107d285610692565b830182610779565b50505b505050565b600082821c905092915050565b6000610800600019846008026107e2565b1980831691505092915050565b600061081983836107ef565b9150826002028217905092915050565b6108338383610643565b67ffffffffffffffff81111561084c5761084b61064e565b5b6108568254610612565b61086182828561079c565b6000601f831160018114610890576000841561087e578287013590505b610888858261080d565b8655506108f0565b601f19841661089e8661067d565b60005b828110156108c6578489013582556001820191506020850194506020810190506108a1565b868310156108e357848901356108df601f8916826107ef565b8355505b6001600288020188555050505b50505050505050565b6109028161039a565b82525050565b600060208201905061091d60008301846108f9565b92915050565b600081519050610932816103ac565b92915050565b60008115159050919050565b61094d81610938565b811461095857600080fd5b50565b60008151905061096a81610944565b92915050565b6000806040838503121561098757610986610370565b5b600061099585828601610923565b92505060206109a68582860161095b565b915050925092905056fea2646970667358221220f950ef51c53544f8822bd6d080941d5f3222641e29e51bf50c57827e31cd83be64736f6c63430008100033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80635fdd59f8146100515780636630f88f14610081578063ba1d0ff41461009d578063c424cb55146100bb575b600080fd5b61006b600480360381019061006691906103d8565b6100eb565b6040516100789190610495565b60405180910390f35b61009b6004803603810190610096919061051c565b61018b565b005b6100a56101dd565b6040516100b291906105c8565b60405180910390f35b6100d560048036038101906100d091906103d8565b610201565b6040516100e29190610495565b60405180910390f35b6000602052806000526040600020600091509050805461010a90610612565b80601f016020809104026020016040519081016040528092919081815260200182805461013690610612565b80156101835780601f1061015857610100808354040283529160200191610183565b820191906000526020600020905b81548152906001019060200180831161016657829003601f168201915b505050505081565b81816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002091826101d8929190610829565b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b606060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ded89a7c846040518263ffffffff1660e01b815260040161025e9190610908565b6040805180830381865afa15801561027a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029e9190610970565b5090506000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080546102ea90610612565b80601f016020809104026020016040519081016040528092919081815260200182805461031690610612565b80156103635780601f1061033857610100808354040283529160200191610363565b820191906000526020600020905b81548152906001019060200180831161034657829003601f168201915b5050505050915050919050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103a58261037a565b9050919050565b6103b58161039a565b81146103c057600080fd5b50565b6000813590506103d2816103ac565b92915050565b6000602082840312156103ee576103ed610370565b5b60006103fc848285016103c3565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561043f578082015181840152602081019050610424565b60008484015250505050565b6000601f19601f8301169050919050565b600061046782610405565b6104718185610410565b9350610481818560208601610421565b61048a8161044b565b840191505092915050565b600060208201905081810360008301526104af818461045c565b905092915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126104dc576104db6104b7565b5b8235905067ffffffffffffffff8111156104f9576104f86104bc565b5b602083019150836001820283011115610515576105146104c1565b5b9250929050565b6000806020838503121561053357610532610370565b5b600083013567ffffffffffffffff81111561055157610550610375565b5b61055d858286016104c6565b92509250509250929050565b6000819050919050565b600061058e6105896105848461037a565b610569565b61037a565b9050919050565b60006105a082610573565b9050919050565b60006105b282610595565b9050919050565b6105c2816105a7565b82525050565b60006020820190506105dd60008301846105b9565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061062a57607f821691505b60208210810361063d5761063c6105e3565b5b50919050565b600082905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026106df7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826106a2565b6106e986836106a2565b95508019841693508086168417925050509392505050565b6000819050919050565b600061072661072161071c84610701565b610569565b610701565b9050919050565b6000819050919050565b6107408361070b565b61075461074c8261072d565b8484546106af565b825550505050565b600090565b61076961075c565b610774818484610737565b505050565b5b818110156107985761078d600082610761565b60018101905061077a565b5050565b601f8211156107dd576107ae8161067d565b6107b784610692565b810160208510156107c6578190505b6107da6107d285610692565b830182610779565b50505b505050565b600082821c905092915050565b6000610800600019846008026107e2565b1980831691505092915050565b600061081983836107ef565b9150826002028217905092915050565b6108338383610643565b67ffffffffffffffff81111561084c5761084b61064e565b5b6108568254610612565b61086182828561079c565b6000601f831160018114610890576000841561087e578287013590505b610888858261080d565b8655506108f0565b601f19841661089e8661067d565b60005b828110156108c6578489013582556001820191506020850194506020810190506108a1565b868310156108e357848901356108df601f8916826107ef565b8355505b6001600288020188555050505b50505050505050565b6109028161039a565b82525050565b600060208201905061091d60008301846108f9565b92915050565b600081519050610932816103ac565b92915050565b60008115159050919050565b61094d81610938565b811461095857600080fd5b50565b60008151905061096a81610944565b92915050565b6000806040838503121561098757610986610370565b5b600061099585828601610923565b92505060206109a68582860161095b565b915050925092905056fea2646970667358221220f950ef51c53544f8822bd6d080941d5f3222641e29e51bf50c57827e31cd83be64736f6c63430008100033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 10,
        "contract": "contracts/AdvertisingBoard/AdvertisingBoard.sol:AdvertisingBoard",
        "label": "messages",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_string_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      }
    }
  }
}