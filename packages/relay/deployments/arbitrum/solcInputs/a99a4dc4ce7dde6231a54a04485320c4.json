{
  "language": "Solidity",
  "sources": {
    "contracts/CoingeckoOracle.sol": {
      "content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.0;\n\ncontract CoingeckoOracle {\n    uint256 public ethUsdPrice;\n    uint256 public lastUpdated;\n\n    event PriceUpdated(uint256 indexed timeStamp, uint256 price);\n\n    receive() external payable {}\n\n    function updatePrice(uint256 _price) external {\n        ethUsdPrice = _price;\n        lastUpdated = block.timestamp;\n\n        emit PriceUpdated(block.timestamp, _price);\n    }\n}\n"
    }
  },
  "settings": {
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "outputSelection": {
      "*": {
        "*": [
          "abi",
          "evm.bytecode",
          "evm.deployedBytecode",
          "evm.methodIdentifiers",
          "metadata",
          "devdoc",
          "userdoc",
          "storageLayout",
          "evm.gasEstimates"
        ],
        "": [
          "ast"
        ]
      }
    },
    "metadata": {
      "useLiteralContent": true
    }
  }
}