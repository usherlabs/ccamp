type Counter = variant {
	topic : text;
	value : nat64;
};

type Subscriber = variant {
	topic : text;
};

type Account = record {
	balance : nat64;
};

type RemittanceReply = record {
	signature : text;
	nonce : nat64;
	amount : nat64;
	hash : text;
};

service : {
	"owner" : () -> (text) query;
	"name" : () -> (text) query;
	"setup_subscribe" : (publisher_id : principal) -> ();
	"remit" : (ticker : text, chain: text, recipient_address : text, amount : nat64, proof: text) -> (RemittanceReply);
	"get_available_balance" : (token : text, chain: text, account : text) -> (Account) query;
	"get_witheld_balance" : (ticker : text, chain: text, recipient_address : text) -> (Account) query;
	"clear_witheld_balance" : (ticker : text, chain: text, recipient_address : text) -> (Account);
	"public_key" : () -> (variant { Ok : record { sec1_pk : text; etherum_pk : text }; Err : text });
};
